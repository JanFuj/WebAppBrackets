@using TestWebAppCoolName.Helpers
@model TestWebAppCoolName.Controllers.Admin.TutorialCategoryViewModel

@{
    ViewBag.Title = "New tutorial Post";
}
<body class="body--admin">
@Html.Partial("_adminLoginPartial")
    <main class="main main--admin-form">
        @using (Html.BeginForm("Create", "TutorialCategory", FormMethod.Post, new { id = "mySubmitForm", @class = "admin-form admin-form--blog", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <p class="admin-form__title">
                <h1 class="main-heading courses__heading">Vytvořit nový článek</h1>
                @Html.TextAreaFor(m => m.TutorialPost.Name, new { placeholder = "Nadpis", @class = "h3 admin-form__textarea" })
                @Html.ValidationMessageFor(m => m.TutorialPost.Name)
            </p>

            <p class="admin-form__desc">
                @Html.TextAreaFor(m => m.TutorialPost.Description, new { placeholder = "Popis", @class = "admin-form__textarea" })
                @Html.ValidationMessageFor(m => m.TutorialPost.Description)
            </p>

            <p>
                @Html.HiddenFor(m => m.TutorialPost.Body)
                @Html.ValidationMessageFor(m => m.TutorialPost.Body)
                <div class="quill-wrapper">
                    <div id="toolbar"></div>
                    <div id="editor"></div>
                </div>
            </p>
            <p class="form-item">
                @Html.LabelFor(m => m.TutorialPost.RelatedCourseId)
                @Html.DropDownListFor(m => m.TutorialPost.RelatedCourseId, new SelectList(new DataService().GetAllCourses(), "Id", "Name"))
                @Html.ValidationMessageFor(m => m.TutorialPost.RelatedCourseId)
            </p>
            <p class="form-item">
                @Html.LabelFor(m => m.TutorialPost.UrlTitle)
                @Html.TextBoxFor(m => m.TutorialPost.UrlTitle)
                @Html.ValidationMessageFor(m => m.TutorialPost.UrlTitle)
            </p>
            <p class="form-item">
                @Html.LabelFor(m => m.TutorialPost.HeaderImage)
                @Html.TextBoxFor(m => m.TutorialPost.HeaderImage, new { id = "HeaderImage" })
            </p>
            <p class="form-item">
                <img id="HeaderImagePlaceHolder" />
            </p>
            <p class="form-item">
                @Html.LabelFor(m => m.TutorialPost.SocialSharingImage)
                @Html.TextBoxFor(m => m.TutorialPost.SocialSharingImage, new { id = "SocialThumbnailImage" })
            </p>
            <p class="form-item">
                <img id="SocialThumbnailImagePlaceHolder" />
            </p>
            <div>
                <div class="subject-info-box-1">
                    <select multiple="multiple" id='lstBox1' class="form-control">
                        @if (Model.TutorialPost?.Tags != null)
                        {
                            foreach (var tag in Model.TutorialPost.Tags)
                            {
                                <option value="@tag.Name">@tag.Name</option>
                            }
                        }
                    </select>
                </div>

                <div class="subject-info-arrows text-center">
                    <input type='button' id='btnRight' value=&gt; class="btn btn-default" />
                    <br />
                    <input type='button' id='btnLeft' value=&lt; class="btn btn-default" />
                    <br />
                </div>



                <div class="subject-info-box-2">
                    <select multiple="multiple" id='lstBox2' class="form-control">
                        @foreach (var tag in new DataService().GetTags())
                        {
                            bool exist = false;
                            if (Model.TutorialPost?.Tags != null)
                            {
                                exist = (Model.TutorialPost.Tags).Any(t => t.Id == tag.Id);
                            }
                            if (!exist)
                            {
                                <option value="@tag.Name">@tag.Name</option>
                            }
                        }
                    </select>
                </div>
                <p id="tags-output">
                    <label>tagy</label>
                    @Html.TextBoxFor(m => m.Tagy, "...", new { id = "tags", name = "Tagy", @readonly = "readonly" })

                </p>
            </div>

            <p>
                <button type="submit" id="save">Vytvořit</button>
                <div id="pageloader" style="display: none;">
                    <img src="/media/30.svg" alt="processing..." />
                </div>
            </p>
            <span>@ViewBag.Message</span>
            if (ViewData["Saved"] != null)
            {
                @Html.Label(ViewData["Saved"].ToString())
            }
        }

    </main>
</body>

@section scripts {
    <!-- Theme included stylesheets -->



    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        let quill = new Quill('#editor',
            {
                modules: {
                    toolbar: {
                        container: toolbarOptions,
                        handlers: {
                            image: imageHandler
                        },
                        syntax: true
                    }
                },
                theme: 'snow'
            });



        var form = document.querySelector('#mySubmitForm');
        form.onsubmit = function (e) {
            // Populate hidden form on submit
            var description = document.querySelector('input[id=TutorialPost_Body]');
            description.value = JSON.stringify(quill.getContents());
            console.log("Submitted", $(form).serialize(), $(form).serializeArray());
        };
    
    </script>

}

