// @function hsl_($colors, $name) {
//     $h: map-get(map-get($colors, $name), h);
//     $s: map-get(map-get($colors, $name), s);
//     $l: map-get(map-get($colors, $name), l);

//     @return unquote('hsl(#{$h}, #{$s}, #{$l})');
// }
@function hsl_($name) {
    $h: map-get(map-get($colors-light-theme, $name), h);
    $s: map-get(map-get($colors-light-theme, $name), s);
    $l: map-get(map-get($colors-light-theme, $name), l);

    @return unquote('hsl(#{$h}, #{$s}, #{$l})');
}

@function hsla_($color, $alpha) {
    @if(type-of($color)=="color") {
        @return hsla(h($color), suration($color), lightness($color), $alpha);
    }

    @else {
        @error "You didn't pass a color object";
    }
}

@function pow($base, $exponents) {
    $raised: 1;

    @for $i from 1 through $exponents {
        $raised: $raised * $base;
    }

    @return $raised;
}

@function type-size($base, $ratio, $exponent) {
    $size: $base * pow($ratio, $exponent);

    @return round($size * 1px);
}

@mixin list-to-properties($list) {
    @each $key, $value in $list {
        #{$key}: #{$value};
    }
}